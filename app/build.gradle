plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.github.k1rakishou.chan4captchasolver"
        minSdk 21
        targetSdk 33
        versionCode 3
        versionName "3.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            universalApk false
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def abi = output.getFilter(com.android.build.OutputFile.ABI)
            outputFileName = "Chan4CaptchaSolver_${abi}.apk"
        }
    }

    buildTypes {
        release {
            File propsFile = file('release.properties')
            if (propsFile.exists()) {
                Properties props = new Properties()
                InputStream is = new FileInputStream(propsFile)
                props.load(is)

                signingConfigs {
                    release {
                        storeFile file(props['keystoreFile'])
                        storePassword props['keystorePass']
                        keyAlias props['keyAlias']
                        keyPassword props['keyPass']

                        v1SigningEnabled true
                        v2SigningEnabled true
                    }
                }

                is.close()
                signingConfig signingConfigs.release
            }

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.cfg'

            debuggable = false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.5.1'

    implementation "org.tensorflow:tensorflow-lite:${tf_version}"
    implementation "org.tensorflow:tensorflow-lite-select-tf-ops:${tf_version}"
    implementation "org.tensorflow:tensorflow-lite-support:0.4.4"
    implementation 'org.tensorflow:tensorflow-lite-task-vision:0.4.4'

    implementation "com.squareup.moshi:moshi-kotlin:${moshi}"
    ksp "com.squareup.moshi:moshi-kotlin-codegen:${moshi}"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}